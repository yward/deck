name: Integration tests

on:
  pull_request:
  push:
    branches:
      - master
      - stable*

env:
  APP_NAME: deck

jobs:
  integration:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        php-versions: ['7.4']
        databases: ['sqlite', 'mysql', 'pgsql']
        server-versions: ['master']

    name: php${{ matrix.php-versions }}-${{ matrix.databases }}-${{ matrix.server-versions }}

    services:
      postgres:
        image: postgres
        ports:
          - 4445:5432/tcp
        env:
          POSTGRES_USER: root
          POSTGRES_PASSWORD: rootpassword
          POSTGRES_DB: nextcloud
        options: --health-cmd pg_isready --health-interval 5s --health-timeout 2s --health-retries 5
      mysql:
        image: mariadb:10.5
        ports:
          - 4444:3306/tcp
        env:
          MYSQL_ROOT_PASSWORD: rootpassword
        options: --health-cmd="mysqladmin ping" --health-interval 5s --health-timeout 2s --health-retries 5

    steps:
      - name: Checkout server
        uses: actions/checkout@v3
        with:
          repository: nextcloud/server
          ref: ${{ matrix.server-versions }}

      - name: Checkout submodules
        shell: bash
        run: |
          auth_header="$(git config --local --get http.https://github.com/.extraheader)"
          git submodule sync --recursive
          git -c "http.extraheader=$auth_header" -c protocol.version=2 submodule update --init --force --recursive --depth=1
          cd build/integration && composer require --dev phpunit/phpunit:~8

      - name: Checkout app
        uses: actions/checkout@v3
        with:
          path: apps/${{ env.APP_NAME }}

      - name: Set up php ${{ matrix.php-versions }}
        uses: shivammathur/setup-php@2.21.0
        with:
          php-version: ${{ matrix.php-versions }}
          tools: phpunit
          extensions: mbstring, iconv, fileinfo, intl, sqlite, pdo_sqlite, mysql, pdo_mysql, pgsql, pdo_pgsql,
          coverage: none

      - name: Set up PHPUnit
        working-directory: apps/${{ env.APP_NAME }}
        run: composer i

      - name: Set up Nextcloud
        run: |
          if [ "${{ matrix.databases }}" = "mysql" ]; then
            export DB_PORT=4444
          elif [ "${{ matrix.databases }}" = "pgsql" ]; then
            export DB_PORT=4445
          fi
          mkdir data
          ./occ maintenance:install --verbose --database=${{ matrix.databases }} --database-name=nextcloud --database-host=127.0.0.1 --database-port=$DB_PORT --database-user=root --database-pass=rootpassword --admin-user admin --admin-pass admin
          cat config/config.php
          ./occ user:list
          ./occ app:enable --force ${{ env.APP_NAME }}
          php -S localhost:8080 &

      - name: Run behat
        working-directory: apps/${{ env.APP_NAME }}/tests/integration
        run: ./run.sh
